!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var n=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._inputDefaultClass=t.inputDefaultClass}var n,r;return n=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.setAttribute("disabled",""),t.classList.add(this._inactiveButtonClass)):(t.removeAttribute("disabled"),t.classList.remove(this._inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);this._toggleButtonState(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);t.forEach((function(t){e._hideInputError(t),t.classList.remove(e._inputErrorClass),t.classList.add(e._inputDefaultClass)})),n.setAttribute("disabled",""),n.classList.add(this._inactiveButtonClass)}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==u(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===u(o)?o:String(o)),r)}var o}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=t,this.headers={authorization:"6b6ff122-c6bd-4191-9431-3243f5375a43","Content-Type":"application/json"}}var t,n;return t=e,n=[{key:"fetchData",value:function(e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n={method:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET",headers:this.headers};return t&&(n.body=JSON.stringify(t)),fetch(e,n).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"getUserInfo",value:function(e){return this.fetchData("".concat(this.options,"/").concat(e)).then((function(e){return e}))}},{key:"editUserInfo",value:function(e,t,n){var r={name:e,about:t};return this.fetchData("".concat(this.options,"/").concat(n),"PATCH",r).then((function(e){return e}))}},{key:"editUserPicture",value:function(e,t){var n={avatar:e};return this.fetchData("".concat(this.options,"/").concat(t),"PATCH",n).then((function(e){return e}))}},{key:"getInitialCards",value:function(e){return this.fetchData("".concat(this.options,"/").concat(e)).then((function(e){return e}))}},{key:"postNewCard",value:function(e,t,n){var r={name:e,link:t};return this.fetchData("".concat(this.options,"/").concat(n),"POST",r).then((function(e){return e}))}},{key:"deleteCard",value:function(e){return this.fetchData("".concat(this.options,"/").concat(e),"DELETE").then((function(e){return e}))}},{key:"likeCard",value:function(e){return this.fetchData("".concat(this.options,"/").concat(e),"PUT").then((function(e){return e}))}},{key:"deleteLike",value:function(e){return this.fetchData("".concat(this.options,"/").concat(e),"DELETE").then((function(e){return e}))}}],n&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),l=new c("https://around.nomoreparties.co/v1/web_es_07");function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}var p=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t.name,this.link=t.link,this.likes=t.likes||[],this.cardId=t.cardId,this._handleCardClick=n,this._deleteConfirmationPopup=null,this._createPopup=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector("#card-template").content.querySelector(".photo-grid").cloneNode(!0)}},{key:"_setEventListeners",value:function(e){var t=this,n=e.querySelector(".photo-grid__like");n.addEventListener("click",(function(){t._handleLikeClick(n,e)}))}},{key:"_fillCardData",value:function(e){e.querySelector(".photo-grid__image").src=this.link,e.querySelector(".photo-grid__image").alt=this.name,e.querySelector(".photo-grid__text").textContent=this.name}},{key:"_configureDeleteEvent",value:function(e,t){var n=this;e.querySelector(".photo-grid__delete").addEventListener("click",(function(){n._openDeletePopup(e,t)}))}},{key:"_openDeletePopup",value:function(e,t){var n=this;this._deleteConfirmationPopup=this._createPopup(),this._deleteConfirmationPopup.open(),this._deleteConfirmationPopup._popup.querySelector("#btnConfirmationDelete").addEventListener("click",(function(r){r.preventDefault();var o=n._deleteConfirmationPopup._popup.querySelector("#btnConfirmationDelete");o.textContent="ELIMINANDO...",setTimeout((function(){n._deleteCard(e,t),n._closeDeletePopup(),o.textContent="SI"}),1e3)})),this._deleteConfirmationPopup._popup.querySelector(".popup__container-image").addEventListener("click",(function(){n._closeDeletePopup()}))}},{key:"_deleteCardFromServer",value:function(e){var t="cards/".concat(e);return l.deleteCard(t).catch((function(e){throw console.log("Error al eliminar la imagen del servidor:",e),e}))}},{key:"_deleteCard",value:function(e,t){e.classList.contains("deleting")||(e.classList.add("deleting"),this._deleteCardFromServer(t).then((function(){e.remove()})).catch((function(e){console.log("Error al eliminar la imagen del servidor:",e)})).finally((function(){e.classList.remove("deleting")})))}},{key:"_closeDeletePopup",value:function(){this._deleteConfirmationPopup.close()}},{key:"_updateLikeCount",value:function(e,t){t.querySelector(".photo-grid__likeCounter").textContent=this.likes.length.toString(),this.likes.includes("881c7f60ed5326b0694b6b1a")?e.classList.add("photo-grid__like_active"):e.classList.remove("photo-grid__like_active")}},{key:"_handleLikeClick",value:function(e,t){var n=this,r=t.dataset.cardId;e.classList.contains("photo-grid__like_active")?this._deleteLike(r).then((function(){t.querySelector(".photo-grid__likeCounter"),n.likes.splice(n.likes.indexOf("881c7f60ed5326b0694b6b1a"),1),n._updateLikeCount(e,t)})).catch((function(e){console.log("Error al eliminar el like:",e)})):this._likeCard(r).then((function(){t.querySelector(".photo-grid__likeCounter"),n.likes.push("881c7f60ed5326b0694b6b1a"),n._updateLikeCount(e,t)})).catch((function(e){console.log("Error al dar like:",e)}))}},{key:"_likeCard",value:function(e){return l.likeCard("cards/likes/".concat(e)).catch((function(e){console.log("Error al dar like a la tarjeta:",e)}))}},{key:"_deleteLike",value:function(e){return l.deleteLike("cards/likes/".concat(e)).catch((function(e){console.log("Error al eliminar el like de la tarjeta:",e)}))}},{key:"createCard",value:function(){var e=this,t=this._getTemplate();return t.dataset.cardId=this.cardId,this._fillCardData(t),this._updateLikeCount(t.querySelector(".photo-grid__like"),t),this._setEventListeners(t),t.querySelector(".photo-grid__image").addEventListener("click",(function(t){t.stopPropagation(),e._handleCardClick(e.name,e.link)})),this._configureDeleteEvent(t,this.cardId),t}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),d=p;function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}var v=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__container-image")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("open"),document.addEventListener("keydown",this._handleEscClose.bind(this))}},{key:"close",value:function(){this._popup.classList.remove("open"),document.removeEventListener("keydown",this._handleEscClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this.close.bind(this))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==h(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===h(o)?o:String(o)),r)}var o}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(this,arguments)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._submitCallback=t,r._form=r._popup.querySelector(".popup__form"),r._formValidator=n,r}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this._form.querySelectorAll(".popup__input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var e=this;_(S(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitCallback(e._getInputValues())}))}},{key:"close",value:function(){_(S(u.prototype),"close",this).call(this),this._form.reset(),this._formValidator&&this._formValidator.resetValidation()}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(v),E=k;function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==w(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}var P=window.Sweetalert2,I=function(){function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(t),this._professionElement=document.querySelector(n),this._nameInput=document.querySelector(r),this._professionInput=document.querySelector(o),this._submitButton=document.querySelector(i),this._formValidator=u,this.setEventListeners()}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e,t){this._nameElement.textContent=e,this._professionElement.textContent=t,this._nameInput.value=e,this._professionInput.value=t}},{key:"getUserInfo",value:function(){var e=this._nameInput.value,t=this._professionInput.value;""!==e.trim()&&/^[a-zA-Z\s\u00C0-\u017FáéíóúÁÉÍÓÚüÜñÑ.,]*$/.test(e.trim())?(this._nameElement.textContent=e,this._professionElement.textContent=t,l.editUserInfo(e,t,"users/me").then((function(){})).catch((function(e){console.log("Error al guardar los datos:",e)}))):P.fire({icon:"error",title:"Error",text:"Asegúrate de que el campo de nombre solo contenga letras, acentos y punto."})}},{key:"setEventListeners",value:function(){var e=this;this._submitButton.addEventListener("click",(function(){e.getUserInfo()}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),L=I;function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==j(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===j(o)?o:String(o)),r)}var o}var O=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profilePictureElement=document.querySelector(t),this._profilePictureInput=document.querySelector(n),this._submitButton=document.querySelector(r),this._formValidator=o,this.setEventListeners()}var t,n;return t=e,n=[{key:"setPicture",value:function(e){this._profilePictureElement.src=e,this._profilePictureInput.value=e}},{key:"getPicture",value:function(){var e=this,t=this._profilePictureInput.value,n=document.querySelector("#submit_imgProfile");n.textContent="GUARDANDO...",this.setPicture(t),l.editUserPicture(t,"users/me/avatar").then((function(){})).catch((function(e){console.log("Error al guardar la imagen:",e)})),setTimeout((function(){e.closeForm(),n.textContent="GUARDAR"}),600)}},{key:"closeForm",value:function(){var e=document.querySelector(".popup");this._profilePictureInput.value="",this._formValidator.resetValidation(),e.classList.remove("open")}},{key:"setEventListeners",value:function(){var e=this;this._submitButton.addEventListener("click",(function(t){t.preventDefault(),e.getPicture()}))}}],n&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D=O;function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==T(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},A.apply(this,arguments)}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e)).bigImage=document.querySelector(".popImg__bigImage"),t.textImageLarge=document.querySelector(".popImg__text"),t.closeImage=document.querySelector(".popImg__close"),t}return t=u,(n=[{key:"open",value:function(e,t,n){this.bigImage.setAttribute("src",t),this.bigImage.setAttribute("alt",n),this.textImageLarge.textContent=e,A(B(u.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;A(B(u.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("mousedown",(function(t){t.target===e._popup&&e.close()}))}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(v),V=window.Sweetalert2,N=document.querySelector(".profile-info__edit"),F=document.querySelector(".profile__addPlace"),G=document.querySelector(".popImg__close"),M=document.querySelector(".profile__overlayImg"),z=new U(".popImg"),H=function(e,t){z.open(e,t)};G.addEventListener("click",(function(){z.close()})),l.getInitialCards("/cards").then((function(e){var t=e.map((function(e,t){return{id:"card-".concat(t),name:e.name,link:e.link,owner:e.owner,cardId:e._id,likes:e.likes||[]}}));t.reverse();var n=new i({items:t,renderer:function(e){var t=new d(e,H,(function(){return new v("#deleteCard")})),r=t.createCard();r.dataset.cardId=e.cardId,"881c7f60ed5326b0694b6b1a"===e.owner._id?(r.querySelector(".photo-grid__delete").style.display="block",e.cardId&&t._configureDeleteEvent(r,e.cardId)):r.querySelector(".photo-grid__delete").style.display="none";var o=r.querySelector(".photo-grid__like"),i=r.querySelector(".photo-grid__likeCounter");e.likes&&e.likes.some((function(e){return"881c7f60ed5326b0694b6b1a"===e._id}))&&o.classList.add("photo-grid__like_active"),e.likes&&e.likes.length&&(i.textContent=e.likes.length.toString()),n.addItem(r)}},"#grid-container");n.render()})).catch((function(e){console.log("Error al obtener las tarjetas iniciales:",e)}));var J={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",inputDefaultClass:"popup__input_type_default"},Z=new n(J,document.querySelector("#edit-ImgProfile .popup__form"));Z.enableValidation();var $=new n(J,document.querySelector("#edit-profile .popup__form"));$.enableValidation();var Y=new n(J,document.querySelector("#new-place .popup__form"));Y.enableValidation();var K=new i({items:[],renderer:function(e){var t=new d(e,H).createCard();K.addItem(t)}},"#grid-container");K.render();var Q=new E("#edit-ImgProfile",(function(e){e.preventDefault();var t=document.querySelector("#input-urlImg").value;te.setUserPicture(t),Q.close()}),Z),W=new E("#edit-profile",(function(){var e=document.querySelector("#name").value,t=document.querySelector("#aboutMe").value,n=document.querySelector("#submit_editProfile");if(""===e.trim()||!/^[a-zA-Z\s\u00C0-\u017FáéíóúÁÉÍÓÚüÜñÑ.,]*$/.test(e.trim()))return V.fire({icon:"error",title:"Error",text:"Asegúrate de que el campo de nombre solo contenga letras, acentos y punto."}),void W.close();ee.setUserInfo(e,t),n.textContent="GUARDANDO...",setTimeout((function(){W.close(),n.textContent="Guardar"}),600)}),$),X=new E("#new-place",(function(){var e=document.querySelector("#titlePlace").value,t=document.querySelector("#input-url").value,n=document.querySelector("#create");n.textContent="GUARDANDO...",l.postNewCard(e,t,"cards").then((function(n){var r=n._id,o=new d({name:e,link:t,likes:[],cardId:r},H,(function(){return new v("#deleteCard")})),i=o.createCard();o._configureDeleteEvent(i,r),K.addItem(i)})).catch((function(e){console.log("Error al agregar la nueva imagen:",e)})).finally((function(){setTimeout((function(){X.close(),n.textContent="CREAR"}),500)}))}),Y);W.setEventListeners(),X.setEventListeners(),Q.setEventListeners(),N.addEventListener("click",(function(){var e=ee._nameElement.textContent,t=ee._professionElement.textContent;ee.setUserInfo(e,t),W.open()})),F.addEventListener("click",(function(){W.close(),X.open()})),M.addEventListener("click",(function(){Q.open()}));var ee=new L(".profile-info__nombre",".profile-info__about-me","#name","#aboutMe","#submit_editProfile",$),te=new D("#profileImage","#input-urlImg","#submit_imgProfile",Z);l.getUserInfo("users/me").then((function(e){var t=e.name,n=e.about,r=e.avatar;ee.setUserInfo(t,n),document.querySelector("#profileImage").src=r})).catch((function(e){console.log("Error al obtener la información del usuario:",e)})),document.addEventListener("click",(function(e){if(e.target.classList.contains("popup")||e.target.classList.contains("popup__container")){W.close(),X.close(),Q.close();var t=document.querySelector("#deleteCard");t&&t.classList.remove("open")}})),document.addEventListener("click",(function(e){(e.target.classList.contains("popImg")||e.target.classList.contains("popImg__container"))&&z.close()}));var ne=document.querySelector(".footer__copyright"),re=(new Date).getFullYear(),oe=document.createTextNode(String.fromCharCode(169));ne.textContent=" ".concat(re," Jordan Esquivel Silva "),ne.prepend(oe)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,